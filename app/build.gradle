apply plugin: 'com.android.application'

def homePath = System.properties['user.home']

android {
    compileSdkVersion 25
    buildToolsVersion "28.0.3"

    defaultConfig {
        applicationId "jp.yhonda"
        minSdkVersion 15
        targetSdkVersion 25
        //testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    dependencies {
        implementation 'com.android.support:support-v4:25.4.0'
        implementation 'com.android.support:appcompat-v7:25.4.0'
        implementation 'com.android.support:design:25.4.0'

        implementation 'com.caverock:androidsvg-aar:1.3'

        implementation project(':android-java-utils')

        // compile 'com.android.support:support-v4:28.0.0'
        // compile 'com.android.support:appcompat-v7:28.0.0'
        // compile 'com.android.support:design:28.0.0'
    }

    signingConfigs {
        release {
            storeFile file("${homePath}/projects/android/keystore/main_keystore")
            keyAlias "MainKey"
            storePassword System.getenv("ANDROID_KEYSTORE_PASSWORD")
            keyPassword System.getenv("ANDROID_KEY_PASSWORD")
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            // proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard.cfg'
            proguardFiles 'proguard.cfg'
        }
    }

  android {
      lintOptions {
          checkReleaseBuilds false
          // // Or, if you prefer, you can continue to check for errors in release builds,
          // // but continue the build even when errors are found:
          // abortOnError false
      }
  }
}
